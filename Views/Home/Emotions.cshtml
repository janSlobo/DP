 
@{
    ViewData["Title"] = "Analýza emocí";
    
  

}
@using PoliticStatements.Models
<script>
    var heightValue = 420;
    var widthValue = 450;
    var pieWidth = 300;
    var yearS;
    var biggerWidth = 750;
    
    var totalPages;
    var currentPage = 1;
    var rowsPerPage = 10;
    var emotionAll = @Html.Raw(Json.Serialize(ViewBag.emotionAll));
    var coocurence = @Html.Raw(Json.Serialize(ViewBag.CoOccurrenceData));
    var averageIntensities = @Html.Raw(Json.Serialize(ViewBag.AverageIntensities));
    var emotionFacebook = @Html.Raw(Json.Serialize(ViewBag.emotionFacebook));
    var emotionTwitter = @Html.Raw(Json.Serialize(ViewBag.emotionTwitter));
    var sentimentData = @Html.Raw(Json.Serialize(ViewBag.SentimentData));
    var emotionnermix = @Html.Raw(Json.Serialize(ViewBag.emotionsNerMix));
    var emotionnernames = @Html.Raw(Json.Serialize(ViewBag.emotionsNerNames));
    var emotionStatsJS = @Html.Raw(Json.Serialize(ViewBag.politicStats));
    var config = {
        displayModeBar: false, responsive: true
    };
    
    function drawEmotionDist(data, id) {
        var emotionData = data[yearS] || data["all"];

        
        var emotionMapping = {
            'anger': 'Hněv',
            'anticipation': 'Očekávání',
            'disgust': 'Znechucení',
            'fear': 'Strach',
            'joy': 'Radost',
            'love': 'Láska',
            'optimism': 'Optimismus',
            'pessimism': 'Pesimismus',
            'sadness': 'Smutek',
            'surprise': 'Překvapení',
            'trust': 'Důvěra'
        };

        var emotions = emotionData.map(item => emotionMapping[item.emotion] || item.emotion);
        var counts = emotionData.map(item => item.count);
       

        var data = [{
            x: counts,
            y: emotions,
            type: 'bar',
            orientation: 'h',
            text: counts.map(value => Math.round(value) + '%'), 
            textposition: 'inside', 
            insidetextanchor: 'middle', 
            marker: { color: 'rgb(49,130,189)' } 
        }];

        var layout = {
            title: '',
            font: { size: 12 },
            xaxis: { title: '' },
            yaxis: {
                title: '',
                automargin: true,
                tickpadding: 20,
                ticks: 'outside'
            },
            autosize:true,
            margin: {
                l: 50,
                r: 10,
                t: 0,
                b: 60
            }
        };

        Plotly.newPlot(id, data, layout, config);
    }





    function drawCoocurence() {
        let coOccurrenceData = coocurence[yearS] || coocurence["all"];

        let emotionMapping = {
            'anger': 'Hněv',
            'anticipation': 'Očekávání',
            'disgust': 'Znechucení',
            'fear': 'Strach',
            'joy': 'Radost',
            'love': 'Láska',
            'optimism': 'Optimismus',
            'pessimism': 'Pesimismus',
            'sadness': 'Smutek',
            'surprise': 'Překvapení',
            'trust': 'Důvěra'
        };

        let emotions = Object.keys(coOccurrenceData).map(emotion => emotionMapping[emotion] || emotion);
        let values = Object.keys(coOccurrenceData).map(row =>
            Object.keys(coOccurrenceData).map(col => coOccurrenceData[row][col] || 0)
        );

        let data = [{
            z: values,
            x: emotions,
            y: emotions,
            type: 'heatmap',
            colorscale: 'YlOrRd'
        }];

        let layout = {
            title: '',
            xaxis: { title: '', tickangle: 45 },
            yaxis: { title: '' },
            margin:{
                t:0
            },
            autosize: true
        };

        Plotly.newPlot('coocurence', data, layout, config);
    }


    function drawIntensityBar() {
        var avgint = averageIntensities[yearS] || averageIntensities["all"];
        var emotionMapping = {
            'anger': 'Hněv',
            'anticipation': 'Očekávání',
            'disgust': 'Znechucení',
            'fear': 'Strach',
            'joy': 'Radost',
            'love': 'Láska',
            'optimism': 'Optimismus',
            'pessimism': 'Pesimismus',
            'sadness': 'Smutek',
            'surprise': 'Překvapení',
            'trust': 'Důvěra'
        };

        var emotions = Object.keys(avgint).map(emotion => emotionMapping[emotion] || emotion);
        var scores = Object.keys(avgint).map(emotion => avgint[emotion].toFixed(2)); 

        var data = [{
            x: emotions,
            y: scores,
            type: 'bar',
            marker: { color: 'rgb(49,130,189)' },
            text: scores, 
            textposition: 'inside', 
            insidetextanchor: 'middle' 
        }];

        var layout = {
            title: '',
            xaxis: { title: '', tickangle: 45 },
            yaxis: { title: '' },
            margin: {
                t: 0,l:20,r:30
            },
            autosize: true
        };

        Plotly.newPlot('intensityBar', data, layout, config);
    }




    function drawSentimentDensity(){
        var sentdata = sentimentData[yearS] || sentimentData["all"]
        var colors = {
            'anger': 'rgb(117, 8, 8)',
            'optimism': 'rgb(255, 159, 64)',
            'pesimism': 'rgb(75, 192, 192)',
            'love': 'rgb(255, 99, 132)',
            'trust': 'rgb(54, 162, 235)',
            'surprise': 'rgb(153, 102, 255)',
            'disgust': 'rgb(75, 192, 192)',
            'joy': 'rgb(255, 159, 64)',
            'sadness': 'rgb(105, 105, 105)',
            'anticipation': 'rgb(255, 205, 86)'
        };

        var traces = [];
        var colorIndex = 0; 

       
        for (var emotion in sentdata) {
            if (sentdata.hasOwnProperty(emotion)) {
                var sentiments = sentdata[emotion];

                var trace = {
                    y: sentiments,  
                    type: 'box',
                    name: emotion,
                  
                    marker: {
                        color: colors[emotion],  
                        line: {
                            width: 1 
                            
                        },
                        size:3
                    },
                    jitter: 0.05,  
                   
                    
                    whiskerwidth: 1.5, 
                    width: 0.6, 
                    line: {
                        width: 2 
                    },
                   
                    text: [emotion], 
                    textposition: 'top center',  
                    textfont: { size: 16 }, 
                        boxmean: true
                };

                traces.push(trace);
                colorIndex++;  
            }
        }

        
        var layout = {
            title: '',
            xaxis: {
                title: '',
                tickangle: 45, 
                tickmode: 'array'
                
            },
            yaxis: {
                title: 'Sentiment',
                range: [-1, 1] 
            },
            showlegend: false,  
            autosize: true,
            margin: {
                t: 0,r:30,l:20
            }
          
        };

      
        Plotly.newPlot('boxplotSentiment', traces, layout,config);
    }
    
    function drawPieChart(data, id) {
       
        var chartData = {
            labels: data.map(function (e) { return e.entityText; }),
            values: data.map(function (e) { return e.frequency; }),
            type: 'pie',
            marker: {
                colors: ['#FF6B6B', '#FFD166', '#06D6A0', '#118AB2', '#EF476F', '#8338EC', '#FB5607', '#3A86FF']
            },
            
            textinfo: 'label',
            textposition: 'inside',
            hoverinfo: 'label+value'

        };

        var layout = {
            title: "",
            margin: { t: 5, r: 5, b: 5, l: 5 },
            showlegend: false,
            autosize: true

        };


       

        Plotly.newPlot(id, [chartData], layout,config);
        
    }
    
    function filterAndSortTable(refreshpage=false) {
        

        if(refreshpage){
            currentPage = 1;
        }
        var emstats = emotionStatsJS[yearS] || emotionStatsJS["all"];
        var originalData = [];

        console.log(emstats);
        emstats.forEach(politician => {
            Object.entries(politician.emotionStatistics).forEach(([key, value]) => {
                originalData.push({
                    politician: politician.osobaId,
                    count:politician.count,
                    emotion: key,
                    percentage: value.percentage,
                    averageIntensity: value.averageIntensity
                });
            });
        });

        var emotionFilter = document.getElementById('emotionFilter').value;
        var sortBy = document.getElementById('sortBy').value;
        var sortOrder = document.getElementById('sortOrder').value;
        var minPostCount = parseInt(document.getElementById('minPostCount').value) || 0; 

        
        let filteredData = originalData.filter(data => {
            return (emotionFilter === "" || data.emotion === emotionFilter) && data.count >= minPostCount;
        });
        totalPages = Math.ceil(filteredData.length/rowsPerPage);
        var totalp = document.getElementById('totalPages');
        totalp.textContent = 'z ' + totalPages;
        
        filteredData.sort((a, b) => {
            let comparison = 0;

            if (sortBy === 'alphabetical') {
                comparison = a.politician.localeCompare(b.politician);
            } else if (sortBy === 'percentage') {
                comparison = a.percentage - b.percentage;
            } else if (sortBy === 'intensity') {
                comparison = a.averageIntensity - b.averageIntensity;
            }

            return sortOrder === 'asc' ? comparison : -comparison;
        });

      
        var startIndex = (currentPage - 1) * rowsPerPage;
        var endIndex = startIndex + rowsPerPage;
        var pageData = filteredData.slice(startIndex, endIndex);

      
        const tableBody = document.querySelector("#emotionTable tbody");
        tableBody.innerHTML = ""; 

        pageData.forEach(data => {
            const row = document.createElement("tr");
            row.innerHTML = `
                <td>${data.politician}</td>
                <td>${data.emotion}</td>
                <td>${data.percentage.toFixed(2)} %</td>
                <td>${data.averageIntensity.toFixed(2)}</td>
            `;
            tableBody.appendChild(row);
        });

        
        document.getElementById('pageNumber').textContent = `Stránka ${currentPage}`;
    }
    function updateStatistics(selectedYear) {
        yearS = selectedYear;
        drawEmotionDist(emotionAll, "emoce_distribuce")
        drawEmotionDist(emotionFacebook, "emoce_distribuce_fb")
        drawEmotionDist(emotionTwitter, "emoce_distribuce_twitter")
        drawCoocurence();
        drawIntensityBar();
        drawSentimentDensity();
        var emonermix = emotionnermix[yearS] || emotionnermix["all"]
        var emonernames = emotionnernames[yearS] || emotionnernames["all"]
        var selectedEmotion = document.getElementById("emotionDropdown").value;

        drawPieChart(emonermix[selectedEmotion], 'nermix')
        drawPieChart(emonernames[selectedEmotion], 'nernames')
        filterAndSortTable(true);
    }
    function showSelectedEmotion() {
        var selectedEmotion = document.getElementById("emotionDropdown").value;
        var emonermix = emotionnermix[yearS] || emotionnermix["all"]
        var emonernames = emotionnernames[yearS] || emotionnernames["all"]
        drawPieChart(emonermix[selectedEmotion], 'nermix')
        drawPieChart(emonernames[selectedEmotion], 'nernames')
    }

   
    document.addEventListener("DOMContentLoaded", function () {
        showSelectedEmotion();
        document.getElementById("yearFilter").addEventListener("change", function () {
            const selectedYear = this.value;
            updateStatistics(selectedYear);
        });
        drawEmotionDist(emotionAll,"emoce_distribuce")
        drawEmotionDist(emotionFacebook,"emoce_distribuce_fb")
        drawEmotionDist(emotionTwitter, "emoce_distribuce_twitter")
        drawCoocurence();
        drawIntensityBar();
        drawSentimentDensity();
        totalPages = Math.ceil((emotionStatsJS[yearS] || emotionStatsJS["all"]).length / rowsPerPage);
        var selectedEmotion = document.getElementById("emotionDropdown").value;
        var emonermix = emotionnermix[yearS] || emotionnermix["all"]
        var emonernames = emotionnernames[yearS] || emotionnernames["all"]
        drawPieChart(emonermix[selectedEmotion], 'nermix')
        drawPieChart(emonernames[selectedEmotion], 'nernames')
       
        document.getElementById('prevPage').addEventListener('click', function () {
            if (currentPage > 1) {
                currentPage--;
                filterAndSortTable();
            }
        });
        
        document.getElementById('nextPage').addEventListener('click', function () {
           

            if (currentPage < totalPages) {
                currentPage++;
                filterAndSortTable();
            }
        });

        

        filterAndSortTable(true);
        

        
        emotionFilter.addEventListener('change',()=> filterAndSortTable(true));
        sortBy.addEventListener('change', ()=>filterAndSortTable(true));
        sortOrder.addEventListener('change', ()=>filterAndSortTable(true));
        minPostCount.addEventListener('change', () => filterAndSortTable(true));

    });
</script>
<div class="chart-card" style="margin-bottom:15px;">

    <div class="chart-header">
        <h2 class="chart-title">Analýza emocí v příspěvcích</h2>
        <p class="chart-subtitle">
Na této stránce je zobrazena analýza emocí v příspěvcích. Lze zde vidět nejčastěji vyskytující se emoce, srovnání sociálních sítí, spoluvýskyt emocí, jejich intenzita či spojení se sentimentem.
Pro jednotlivé emoce si také lze zobrazit charakteristické entity.
</p>

        <p class="chart-subtitle">
            V tabulce je pak zobrazeno jaké emoce používali konkrétní politici. Politiky v tabulce lze také řadit a filtrovat.
        </p>

    </div>

    <p class="d-flex align-items-center">
        <span class="me-2">Zobrazit statistiky pro rok:</span>
        <select id="yearFilter" class="form-select w-auto">
            <option value="">Všechny roky</option>
            @for (int year = 2016; year <= 2022; year++)
            {
                <option value="@year.ToString()">@year</option>
            }
        </select>
    </p>
</div>

<div class="sentiment_page">
<div class="left-panel-emotion">
        <div class="myrow2">
            <div class="chart-card">
                <div class="chart-header">
                    <h3 class="chart-title">Frekvence emocí</h3>
                    <p class="chart-subtitle"></p>
                </div>
                <div class="chart-container" id="emoce_distribuce"></div>

            </div>
            <div class="chart-card">
                <div class="chart-header">
                    <h3 class="chart-title">Spoluvýskyt emocí</h3>
                    <p class="chart-subtitle"></p>
                </div>
                <div class="chart-container" id="coocurence"></div>

            </div>
        </div>

        

        <div class="chart-card">
            <div class="chart-header">
                <h3 class="chart-title">Emoce na soc.sítích</h3>
                <p class="chart-subtitle">
                    Srovnání použitých emocí na Facebooku a Twitteru
                </p>
            </div>


            <div class="chart-row">
                <div class="chart-column">
                    <h4 class="chart-subtitle-title">Facebook</h4>
                    <div class="chart-container-detail" id="emoce_distribuce_fb"></div>
                </div>
                <div class="chart-column">
                    <h4 class="chart-subtitle-title">Twitter</h4>
                    <div class="chart-container-detail" id="emoce_distribuce_twitter"></div>
                </div>
            </div>
        </div>

        <div class="myrow2">
            <div class="chart-card">
                <div class="chart-header">
                    <h3 class="chart-title">Intenzita emocí</h3>
                    <p class="chart-subtitle">Průměrná intenzita emocí</p>
                </div>
                <div class="chart-container" id="intensityBar"></div>

            </div>
            <div class="chart-card">
                <div class="chart-header">
                    <h3 class="chart-title">Sentiment a emoce</h3>
                    <p class="chart-subtitle"></p>
                </div>
                <div class="chart-container" id="boxplotSentiment"></div>

            </div>
        </div>
   

   
</div>
<div class="right-panel-emotion">
        <div id="filter-panel" class="d-flex gap-2 align-items-center p-3 border rounded bg-light filter-panel">

            <select id="emotionFilter" class="form-select">
                <option value="">Všechny emoce</option>
                <option value="anger">Hněv</option>
                <option value="joy">Radost</option>
                <option value="sadness">Smutek</option>
                <option value="trust">Důvěra</option>
                <option value="disgust">Znechucení</option>
                <option value="anticipation">Očekávání</option>
                <option value="optimism">Optimismus</option>
                <option value="pesimism">Pesimismus</option>
                <option value="love">Láska</option>
                <option value="surprise">Překvapení</option>
      
            </select>

            <select id="sortBy" class="form-select">
                <option value="alphabetical">Abecedně (Politik)</option>
                <option value="percentage">Procento použití</option>
                <option value="intensity">Průměrná intenzita</option>
            </select>

            <select id="sortOrder" class="form-select">
                <option value="asc">Vzestupně</option>
                <option value="desc">Sestupně</option>
            </select>
            <label for="minPostCount">Minimální počet příspěvků:</label>
            <input type="number" id="minPostCount" class="form-select" placeholder="Zadejte počet">
        </div>

        <table id="emotionTable" class="table styled-table">
            <thead>
                <tr>
                    <th>Politik</th>
                    <th>Emoce</th>
                    <th>Procento použití</th>
                    <th>Průměrná intenzita</th>
                </tr>
            </thead>
            <tbody>
             
            </tbody>
        </table>
        <div id="pagination" class="pagination">
            <button id="prevPage">Předchozí</button>
            <span id="pageNumber">Stránka 1</span>
            <span id="totalPages">z 1</span> 
            <button id="nextPage">Další</button>
        </div>


        <div class="chart-card">
            <div class="chart-header">
                <h3 class="chart-title">Entity v emocích</h3>
                <p class="chart-subtitle">Charakteristické entity pro emoci

                <div class="year-selection" style="display: inline-block; margin-left: 10px;">
                       
                        <select id="emotionDropdown" onchange="showSelectedEmotion()" class="year-select">
                            <option value="anger">Hněv</option>
                            <option value="anticipation">Očekávání</option>
                            <option value="disgust">Znechucení</option>
                            <option value="fear">Strach</option>
                            <option value="joy">Radost</option>
                            <option value="love">Láska</option>
                            <option value="optimism">Optimismus</option>
                            <option value="pessimism">Pesimismus</option>
                            <option value="sadness">Smutek</option>
                            <option value="surprise">Překvapení</option>
                            <option value="trust">Důvěra</option>
                        </select>
                    </div> 
            </p>
            </div>

 
            <div class="chart-row1" >
                <div class="chart-column">
                    <h4 class="chart-subtitle-title">Mix typů entit</h4>
                    <div class="chart-container-detail" id="nermix"></div>
                </div>
                <div class="chart-column">
                    <h4 class="chart-subtitle-title">Osoby</h4>
                    <div class="chart-container-detail" id="nernames"></div>
                </div>
            </div>
                    
            
        </div>

       


            
        
       
   

        
</div>
</div>
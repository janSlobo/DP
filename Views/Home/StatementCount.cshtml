
@{
    ViewData["Title"] = "View";
    var histogramData = ViewBag.histogramData as Dictionary<string, List<HistogramData>>;
    var histogramDataF = ViewBag.histogramData_F as Dictionary<string, List<HistogramData>>;
    var histogramDataT = ViewBag.histogramData_T as Dictionary<string, List<HistogramData>>;
    var maxminweek = ViewBag.maxminweek as Dictionary<string, Tuple<dynamic, dynamic>>;
    var politicCounts = ViewBag.politicCountsAll as Dictionary<int, Dictionary<string, int>>;

}
<script>
    var heightValue = 420;
    var widthValue = 510;

    var biggerWidth = 750;

    var histogramData = @Html.Raw(Json.Serialize(histogramData));
    var histogramDataF = @Html.Raw(Json.Serialize(histogramDataF));
    var histogramDataT = @Html.Raw(Json.Serialize(histogramDataT));
    const statementCounts = @Html.Raw(Json.Serialize(ViewBag.statementCounts));
    const uniquePoliticians = @Html.Raw(Json.Serialize(ViewBag.uniquePoliticians));

    const avgstatements = @Html.Raw(Json.Serialize(ViewBag.avgstatements));
    const medianstatements = @Html.Raw(Json.Serialize(ViewBag.medianstatements));
    var monthlyData = @Html.Raw(Json.Serialize(ViewBag.monthlyCount));
    var dayofweekCount = @Html.Raw(Json.Serialize(ViewBag.dayofweekCount));
    var maxminweek = @Html.Raw(Json.Serialize(maxminweek));

    const statementCountsFB = @Html.Raw(Json.Serialize(ViewBag.statementCountsFB));
    const uniquePoliticiansFB = @Html.Raw(Json.Serialize(ViewBag.uniquePoliticiansFB));

    const statementCountsTW = @Html.Raw(Json.Serialize(ViewBag.statementCountsTW));
    const uniquePoliticiansTW = @Html.Raw(Json.Serialize(ViewBag.uniquePoliticiansTW));
    function updateStatistics(year) {
        
        
        showStatistics(year)
        showHistograms(year);

    }

    function showStatistics(year) {
       


        const stats = {
            totalStatements: statementCounts[year] || statementCounts["all"],
            totalPersons: uniquePoliticians[year] || uniquePoliticians["all"],
            avgStatementsPerPerson: avgstatements[year] || avgstatements["all"],
            medianStatementsPerPerson: medianstatements[year] || medianstatements["all"],
            totalStatementsFB: statementCountsFB[year] || statementCountsFB["all"],
            totalPersonsFB: uniquePoliticiansFB[year] || uniquePoliticiansFB["all"],
            totalStatementsTW: statementCountsTW[year] || statementCountsTW["all"],
            totalPersonsTW: uniquePoliticiansTW[year] || uniquePoliticiansTW["all"],
        };
       
        document.getElementById("totalStatements").innerText = stats.totalStatements || 0;
        document.getElementById("totalPersons").innerText = stats.totalPersons || 0;
        document.getElementById("avgStatementsPerPerson").innerText = stats.avgStatementsPerPerson.toFixed(2) || 0;
        document.getElementById("medianStatementsPerPerson").innerText = stats.medianStatementsPerPerson || 0;

        document.getElementById("totalStatementsFB").innerText = stats.totalStatementsFB || 0;
        document.getElementById("totalStatementsTW").innerText = stats.totalStatementsTW || 0;
        document.getElementById("totalPersonsFB").innerText = stats.totalPersonsFB || 0;
        document.getElementById("totalPersonsTW").innerText = stats.totalPersonsTW || 0;
       
       
    }

    
    function renderTableForYear(year) {
        var sortBy = document.getElementById('sortBy').value;
        var order = document.getElementById('order').value;
        var server = document.getElementById('server').value;

        // Výběr správného datového setu podle serveru
        var data = [];
        if (server === 'all') {
            data = @Html.Raw(Json.Serialize(ViewBag.politicCountsAll));
        } else if (server === 'twitter') {
            data = @Html.Raw(Json.Serialize(ViewBag.politicCountsTwitter));
        } else if (server === 'facebook') {
            data = @Html.Raw(Json.Serialize(ViewBag.politicCountsFacebook));
        }

        dataY = data[year] || data["all"]

        // Převod dat pro daný rok do formátu pro tabulku
        var tableData = [];
        for (var osobaId in dataY) {
            tableData.push({
                year: year,
                osobaId: osobaId,
                count: dataY[osobaId]
            });
        }

        // Řazení podle zvolených kritérií
        tableData.sort(function (a, b) {
            if (sortBy === 'name') {
                return order === 'asc' ? a.osobaId.localeCompare(b.osobaId) : b.osobaId.localeCompare(a.osobaId);
            } else if (sortBy === 'count') {
                return order === 'asc' ? a.count - b.count : b.count - a.count;
            }
            return 0;
        });

        // Vymazání stávajících řádků v tabulce
        var tbody = document.getElementById('statementsTable').getElementsByTagName('tbody')[0];
        tbody.innerHTML = '';

        // Přidání nových řádků podle seřazených dat
        tableData.forEach(function (item) {
            var row = tbody.insertRow();
            
            var cellOsobaId = row.insertCell(0);
            var cellCount = row.insertCell(1);

           
            cellOsobaId.textContent = item.osobaId;
            cellCount.textContent = item.count;
        });
    }
    function showHistograms(year) {
        

        
        var selectedData = histogramData[year] || histogramData["all"];
        var selectedDataF = histogramDataF[year] || histogramDataF["all"];
        var selectedDataT = histogramDataT[year] || histogramDataT["all"];

     
        var statementCounts = selectedData.map(x => x.statementCount);
        var numOfPeople = selectedData.map(x => x.numOfPeople);

        var statementCountsF = selectedDataF.map(x => x.statementCount);
        var numOfPeopleF = selectedDataF.map(x => x.numOfPeople);

        var statementCountsT = selectedDataT.map(x => x.statementCount);
        var numOfPeopleT = selectedDataT.map(x => x.numOfPeople);
        
        function showHist(statementCounts, numOfPeople,id) {
            var data = [{
                x: statementCounts,
                y: numOfPeople,
                type: 'bar',
                marker: {
                    color: 'rgba(54, 162, 235, 0.6)',
                    line: { color: 'rgba(54, 162, 235, 1)', width: 2 }
                }
            }];


            var layout = {
                title: 'Distribuce počtu vyjádření',
                xaxis: {
                    title: 'Počet vyjádření',type:'log'
                },
                yaxis: {
                    title: 'Počet osob',
                },
                showlegend: false,
                width:widthValue,
                heightValue:heightValue
            };


            Plotly.newPlot(id, data, layout);
        }
        showHist(statementCounts, numOfPeople, "histogramChart")
        showHist(statementCountsF, numOfPeopleF, "histogramChartF")
        showHist(statementCountsT, numOfPeopleT, "histogramChartT")


       

        function showCategoryHist(statementCounts, numOfPeople, id) {
            // Definujeme kategorie
            var categories = {
                "0-10": 0,
                "11-50": 0,
                "51-100": 0,
                "101-500":0,
                ">500": 0
            };

            // Kategorizujeme data
            for (let i = 0; i < statementCounts.length; i++) {
                let count = statementCounts[i];
                let people = numOfPeople[i];

                if (count <= 10) categories["0-10"] += people;
                else if (count <= 50) categories["11-50"] += people;
                else if (count <= 100) categories["51-100"] += people;
                else if (count <= 500) categories["101-500"] += people;
                else categories[">500"] += people;
            }

            // Připravíme data pro graf
            var categoryNames = Object.keys(categories);
            var categoryValues = Object.values(categories);

            var data = [{
                x: categoryNames,
                y: categoryValues,
                type: 'bar',
                marker: {
                    color: 'rgba(54, 162, 235, 0.6)',
                    line: { color: 'rgba(54, 162, 235, 1)', width: 2 }
                }
            }];

            var layout = {
                title: 'Distribuce vyjádření podle kategorií',
                xaxis: { title: 'Kategorie počtu vyjádření' },
                yaxis: { title: 'Počet osob' },
                showlegend: false,
                width: widthValue,
                heightValue: heightValue
            };

            Plotly.newPlot(id, data, layout);
        }



        showCategoryHist(statementCounts, numOfPeople, "histogramChartCategory");
        showCategoryHist(statementCountsT, numOfPeopleT, "histogramChartCategoryT");
        showCategoryHist(statementCountsF, numOfPeopleF, "histogramChartCategoryF");


        function drawMonthlyCount() {
            
            var data = monthlyData[year] || monthlyData["all"];
            
            var months = data.map(entry => entry.month);
            var counts = data.map(entry => entry.count);
            var trace = {
                x: months.map(m => new Date(2023, m - 1, 1).toLocaleString('cs-CZ', { month: 'long' })), // Převod čísla měsíce na název
                y: counts,
                type: 'scatter',
                mode: 'lines+markers',
                line: { shape: 'spline' }
            };

            var layout = {
                title: `Vývoj počtu příspěvků v roce ${year}`,
                xaxis: { title: 'Měsíc', tickangle: 45 },
                yaxis: { title: 'Počet příspěvků' },
                width: widthValue,
                heightValue: heightValue,
                margin: {
                    b: 65,
                    l: 50
                },
            };

            Plotly.newPlot('monthlyChart', [trace], layout);
        }

        drawMonthlyCount(year);

        function getWeekInMonth(year, weekNumber) {
           console.log(year,weekNumber)
            let firstDayOfYear = new Date(year, 0, 1);
            let daysInWeek = (weekNumber - 1) * 7;
            let dateOfWeek = new Date(firstDayOfYear.setDate(firstDayOfYear.getDate() + daysInWeek));
            let month = dateOfWeek.getMonth(); 
            let dayOfMonth = dateOfWeek.getDate();
            let weekInMonth = Math.ceil(dayOfMonth / 7);

            console.log(weekInMonth)
            console.log(month)
            var monthsInCzech = [
                "leden", "únor", "březen", "duben", "květen", "červen",
                "červenec", "srpen", "září", "říjen", "listopad", "prosinec"
            ];

            return { weekInMonth: weekInMonth, monthName: monthsInCzech[month] };
        }

        function plotPostsByWeekday( year) {
          
            var dataForYear = dayofweekCount[year] || dayofweekCount["all"];
          

            // Seznam dnů v týdnu pro osy X
            const daysOfWeek = ["Pondělí", "Úterý", "Středa", "Čtvrtek", "Pátek", "Sobota", "Neděle"];

            // Data pro graf
            var counts = daysOfWeek.map(day => dataForYear[day] || 0);

            // Vytvoření grafu
            const trace = {
                x: daysOfWeek,
                y: counts,
                type: 'bar'
            };

            const layout = {
                title: `Aktivita ve dnech v týdnu `,
                xaxis: {
                    title: 'Den v týdnu'
                },
                yaxis: {
                    title: 'Počet příspěvků'
                },
                width:widthValue,
                height:heightValue
            };

            Plotly.newPlot('dayofweek', [trace], layout);
        }
        plotPostsByWeekday(year)

        function showWeekInfo(year) {
            

            if (year && maxminweek[year]) {
                var max = maxminweek[year].item1;
                var min = maxminweek[year].item2;
                
                let { weekInMonth: weekInMonthMax, monthName: monthMax } = getWeekInMonth(year, max.week);
                let { weekInMonth: weekInMonthMin, monthName: monthMin } = getWeekInMonth(year, min.week);

                // Zobrazení informací o týdnech
                document.getElementById('max-week-info').innerText = `Týden ${max.week} (${weekInMonthMax}. týden v měsíci ${monthMax}) - ${max.count} příspěvků`;
                document.getElementById('min-week-info').innerText = `Týden ${min.week} (${weekInMonthMin}. týden v měsíci ${monthMin}) - ${min.count} příspěvků`;

                // Přidání barev pro vizuální zvýraznění
                document.getElementById('max-week').classList.add('active');
                document.getElementById('min-week').classList.add('inactive');
            } else {
                document.getElementById('max-week-info').innerText = 'Není dostupný';
                document.getElementById('min-week-info').innerText = 'Není dostupný';
            }
        }
        showWeekInfo(year)
        renderTableForYear(year)

    }

    

    document.addEventListener("DOMContentLoaded", function () {
        document.getElementById("yearFilter").addEventListener("change", function () {
            const selectedYear = this.value;
            updateStatistics(selectedYear);
        });
        showStatistics()
        showHistograms()
       
        renderTableForYear();

        // Použití filtrů při změně výběru
        document.getElementById('sortBy').addEventListener('change', function () {
            var year = document.getElementById("yearFilter").value;
            renderTableForYear(year);
        });
        document.getElementById('order').addEventListener('change', function () {
            var year = document.getElementById("yearFilter").value;
            renderTableForYear(year);
        });
        document.getElementById('server').addEventListener('change', function () {
            var year = document.getElementById("yearFilter").value;
            renderTableForYear(year);
        });

    });
</script>
<h1>Analýza frekvence vyjádření</h1>

<div class="row justify-content-start mb-3">
    <div class="col-md-4">
        <select id="yearFilter" class="form-select">
            <option value="">Všechna vyjádření</option>
            @for (int year = 2016; year <= 2023; year++)
            {
                <option value="@year.ToString()">@year</option>
            }
        </select>
    </div>
</div>

<div class="sentiment_page">
    <div class="left-panel-count">
<div class="card">
    <div class="card-header">
        <h3>Základní informace</h3>
    </div>
    <div class="card-body">
                <div class="container">
                    <div class="row justify-content-center g-4" style="margin-bottom: 20px;">
                        <div class="col-12 col-sm-6 col-md-3">
                            <div class="stat-box">
                                <p class="stat-label">Počet vyjádření</p>
                                <p class="stat-number" id="totalStatements">0</p>
                            </div>
                        </div>
                        <div class="col-12 col-sm-6 col-md-3">
                            <div class="stat-box">
                                <p class="stat-label">Počet politiků</p>
                                <p class="stat-number" id="totalPersons">0</p>
                            </div>
                        </div>
                        <div class="col-12 col-sm-6 col-md-3">
                            <div class="stat-box">
                                <p class="stat-label">Průměrný počet vyjádření</p>
                                <p class="stat-number" id="avgStatementsPerPerson">0</p>
                            </div>
                        </div>
                        <div class="col-12 col-sm-6 col-md-3">
                            <div class="stat-box">
                                <p class="stat-label">Medián počtu vyjádření</p>
                                <p class="stat-number" id="medianStatementsPerPerson">0</p>
                            </div>
                        </div>
                    </div>

                    <!-- Nový řádek pro další stat boxy -->
                    <div class="row justify-content-center g-4" style="margin-bottom: 20px;">
                        <div class="col-12 col-sm-6 col-md-3">
                            <div class="stat-boxTW">
                                <p class="stat-labelS">Počet vyjádření Twitter</p>
                                <p class="stat-numberS" id="totalStatementsTW">0</p>
                            </div>
                        </div>
                        <div class="col-12 col-sm-6 col-md-3">
                            <div class="stat-boxTW">
                                <p class="stat-labelS">Počet politiků Twitter</p>
                                <p class="stat-numberS" id="totalPersonsTW">0</p>
                            </div>
                        </div>
                        <div class="col-12 col-sm-6 col-md-3">
                            <div class="stat-boxFB">
                                <p class="stat-labelS">Počet vyjádření Facebook </p>
                                <p class="stat-numberS" id="totalStatementsFB">0</p>
                            </div>
                        </div>
                        <div class="col-12 col-sm-6 col-md-3">
                            <div class="stat-boxFB">
                                <p class="stat-labelS">Počet politiků Facebook </p>
                                <p class="stat-numberS" id="totalPersonsFB">0</p>
                            </div>
                        </div>
                    </div>
                </div>

    </div>
</div>

<div class="card">
    <div class="card-header">
        <h3>Distribuce počtu vyjádření</h3>
    </div>
    <div class="card-body">
        <div class="block">
            <h4>Všechna platformy</h4>
            <div class="grid">
                <div id="histogramChart" class="chart-container"></div>
                <div id="histogramChartCategory" class="chart-container"></div>

            </div>
        </div>
       
        <div class="block">
            <h4>Facebook</h4>

            <div class="grid">
                <div id="histogramChartF" class="chart-container"></div>
                <div id="histogramChartCategoryF" class="chart-container"></div>

            </div>
        </div>
        <div class="block">
            <h4>Twitter</h4>
            <div class="grid">
                <div id="histogramChartT" class="chart-container"></div>
                <div id="histogramChartCategoryT" class="chart-container"></div>

            </div>
        </div>
    </div>
</div>
        <div class="card">
            <div class="card-header">
                <h3>Časové trendy</h3>
            </div>
            <div class="card-body">
                <div class="block">
                   
                    <div id="monthlyChart" class="chart-container"></div>
                </div>
                <div class="block">

                    <div id="dayofweek" class="chart-container"></div>
                </div>
               <div class="block">
                    <div class="week-info-container">
                        
                        <div id="week-info">
                            <div class="week-card" id="max-week">
                                <h4>Nejaktivnější týden</h4>
                                <p><span id="max-week-info"></span></p>
                            </div>
                            <div class="week-card" id="min-week">
                                <h4>Nejméně aktivní týden</h4>
                                <p><span id="min-week-info"></span></p>
                            </div>
                        </div>
                    </div>
               </div>
            </div>
        </div>
        

    </div> 
    <div class="right-panel-count">
        
            <!-- Filtry -->
            <div id="filter-panel" class="d-flex gap-2 align-items-center p-3 border rounded bg-light filter-panel">
                <label for="sortBy">Řadit podle:</label>
            <select id="sortBy" class="form-select">
                    <option value="name">Abecedně</option>
                    <option value="count">Počet</option>
                </select>

                <label for="order">Řazení:</label>
            <select id="order" class="form-select">
                    <option value="asc">Vzestupně</option>
                    <option value="desc">Sestupně</option>
                </select>

                <label for="server">Server:</label>
            <select id="server" class="form-select">
                    <option value="all">Všechny</option>
                    <option value="twitter">Twitter</option>
                    <option value="facebook">Facebook</option>
                </select>
            </div>

            <!-- Tabulka -->
        <table id="statementsTable" class="table styled-table">
            <thead>
                <tr>
                  
                    <th>Osoba</th>
                    <th>Počet vyjádření</th>
                </tr>
            </thead>
            <tbody>
                <!-- Tabulka bude vykreslena pomocí JavaScriptu -->
            </tbody>
            </table>
        
    </div>
</div>